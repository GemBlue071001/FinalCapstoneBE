using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    /// <inheritdoc />
    public partial class addResult : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "Descition",
                table: "KPI");

            migrationBuilder.DropColumn(
                name: "Value",
                table: "KPI");

            migrationBuilder.AddColumn<int>(
                name: "Weight",
                table: "KPI",
                type: "integer",
                nullable: false,
                defaultValue: 0);

            migrationBuilder.CreateTable(
                name: "UserResults",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Value = table.Column<float>(type: "real", nullable: false),
                    UserId = table.Column<int>(type: "integer", nullable: false),
                    ProgramKpiId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserResults", x => x.Id);
                    table.ForeignKey(
                        name: "FK_UserResults_ProgramKPI_ProgramKpiId",
                        column: x => x.ProgramKpiId,
                        principalTable: "ProgramKPI",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserResults_Users_UserId",
                        column: x => x.UserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 212, 17, 61, 124, 198, 55, 54, 151, 134, 212, 250, 240, 101, 57, 248, 24, 146, 112, 12, 41, 218, 232, 231, 218, 140, 116, 196, 222, 173, 244, 107, 177, 163, 153, 57, 145, 30, 106, 96, 28, 236, 107, 131, 52, 220, 82, 96, 56, 105, 91, 54, 110, 203, 174, 105, 62, 201, 122, 132, 166, 37, 174, 1, 222 }, new byte[] { 214, 141, 241, 100, 3, 22, 53, 79, 49, 88, 131, 76, 203, 57, 1, 158, 112, 217, 142, 194, 187, 119, 170, 196, 156, 103, 17, 235, 204, 124, 33, 229, 105, 1, 227, 50, 151, 247, 181, 64, 127, 44, 232, 25, 21, 79, 215, 163, 13, 52, 132, 157, 170, 5, 156, 144, 120, 80, 132, 198, 34, 29, 15, 216, 64, 6, 125, 201, 154, 6, 37, 67, 35, 231, 68, 31, 104, 248, 1, 35, 23, 73, 22, 59, 84, 117, 126, 46, 116, 126, 158, 230, 168, 168, 255, 209, 181, 186, 151, 7, 7, 153, 216, 117, 41, 172, 211, 52, 58, 168, 176, 219, 47, 7, 159, 223, 1, 7, 159, 51, 28, 142, 100, 81, 229, 103, 18, 204 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 244, 167, 133, 237, 222, 58, 78, 18, 198, 206, 20, 57, 172, 244, 47, 94, 88, 61, 135, 41, 102, 193, 178, 13, 44, 41, 8, 159, 83, 179, 81, 31, 245, 174, 184, 37, 242, 165, 231, 2, 146, 42, 177, 52, 131, 173, 6, 187, 214, 210, 241, 163, 178, 85, 67, 254, 0, 63, 69, 161, 191, 148, 233, 108 }, new byte[] { 124, 197, 193, 182, 210, 169, 166, 61, 254, 135, 238, 218, 186, 235, 131, 40, 71, 108, 165, 1, 122, 213, 205, 245, 49, 158, 128, 163, 124, 223, 54, 56, 19, 227, 130, 62, 160, 186, 206, 18, 104, 67, 18, 86, 12, 210, 178, 209, 92, 229, 246, 20, 186, 217, 186, 104, 252, 16, 107, 228, 251, 26, 223, 243, 251, 235, 183, 36, 52, 181, 116, 118, 218, 66, 40, 74, 177, 174, 44, 142, 174, 5, 150, 53, 100, 197, 214, 238, 138, 192, 169, 75, 203, 217, 157, 4, 36, 70, 235, 170, 121, 184, 123, 71, 130, 116, 168, 237, 169, 216, 137, 184, 1, 206, 254, 52, 7, 207, 174, 206, 139, 23, 90, 224, 241, 172, 110, 134 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 249, 8, 58, 50, 34, 38, 129, 173, 172, 184, 233, 92, 153, 113, 227, 38, 97, 203, 92, 222, 21, 93, 38, 194, 39, 157, 203, 218, 232, 120, 173, 2, 86, 71, 10, 11, 103, 100, 146, 84, 179, 250, 227, 225, 27, 131, 88, 213, 157, 81, 163, 52, 59, 100, 163, 19, 105, 83, 7, 16, 246, 96, 198, 28 }, new byte[] { 217, 164, 164, 214, 97, 210, 119, 162, 158, 233, 99, 38, 166, 196, 80, 114, 107, 128, 152, 61, 187, 116, 208, 63, 42, 101, 19, 109, 1, 55, 49, 243, 118, 145, 35, 206, 99, 119, 188, 174, 248, 41, 250, 123, 45, 14, 15, 206, 1, 146, 251, 88, 84, 248, 195, 221, 230, 53, 249, 225, 230, 13, 70, 223, 93, 227, 230, 237, 212, 139, 192, 25, 122, 224, 226, 177, 197, 183, 243, 235, 32, 60, 174, 64, 222, 52, 212, 45, 70, 215, 2, 120, 103, 154, 28, 103, 146, 120, 243, 146, 19, 178, 161, 245, 123, 133, 220, 208, 174, 209, 235, 139, 105, 88, 140, 89, 233, 186, 252, 123, 114, 167, 239, 105, 97, 73, 242, 69 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 131, 140, 92, 58, 229, 196, 162, 149, 4, 69, 252, 105, 189, 3, 31, 7, 159, 200, 149, 10, 39, 65, 253, 30, 253, 126, 59, 64, 61, 107, 158, 79, 235, 104, 47, 219, 93, 111, 36, 11, 120, 235, 84, 105, 232, 197, 136, 220, 25, 78, 159, 186, 115, 45, 26, 59, 237, 240, 251, 122, 192, 60, 119, 90 }, new byte[] { 24, 84, 232, 185, 97, 143, 5, 232, 66, 89, 90, 212, 204, 226, 234, 179, 223, 153, 28, 46, 8, 88, 16, 144, 11, 243, 133, 97, 244, 151, 220, 94, 33, 40, 170, 151, 121, 184, 104, 123, 119, 72, 201, 63, 215, 48, 158, 211, 210, 214, 224, 45, 125, 129, 111, 3, 179, 68, 189, 222, 29, 136, 184, 145, 109, 143, 46, 85, 83, 159, 104, 175, 254, 5, 164, 189, 236, 189, 65, 224, 218, 215, 203, 253, 40, 112, 38, 136, 38, 9, 233, 58, 240, 224, 145, 160, 184, 6, 208, 174, 88, 185, 155, 168, 242, 29, 100, 55, 50, 138, 128, 105, 214, 180, 160, 67, 103, 185, 100, 202, 17, 33, 5, 100, 222, 72, 31, 198 } });

            migrationBuilder.CreateIndex(
                name: "IX_UserResults_ProgramKpiId",
                table: "UserResults",
                column: "ProgramKpiId");

            migrationBuilder.CreateIndex(
                name: "IX_UserResults_UserId",
                table: "UserResults",
                column: "UserId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "UserResults");

            migrationBuilder.DropColumn(
                name: "Weight",
                table: "KPI");

            migrationBuilder.AddColumn<string>(
                name: "Descition",
                table: "KPI",
                type: "text",
                nullable: false,
                defaultValue: "");

            migrationBuilder.AddColumn<string>(
                name: "Value",
                table: "KPI",
                type: "text",
                nullable: false,
                defaultValue: "");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 219, 154, 199, 161, 88, 50, 80, 67, 65, 32, 20, 200, 244, 165, 93, 99, 27, 198, 71, 18, 25, 254, 94, 94, 133, 101, 147, 108, 24, 255, 57, 114, 15, 55, 107, 129, 189, 113, 250, 139, 168, 132, 150, 138, 42, 93, 186, 17, 45, 176, 3, 23, 107, 214, 80, 175, 190, 135, 162, 81, 153, 128, 200, 215 }, new byte[] { 225, 68, 208, 235, 40, 104, 151, 193, 70, 101, 44, 66, 182, 157, 142, 118, 9, 58, 92, 169, 209, 142, 239, 199, 239, 154, 95, 168, 19, 99, 27, 11, 46, 142, 173, 153, 33, 240, 33, 156, 26, 31, 79, 88, 19, 191, 24, 91, 38, 86, 153, 3, 38, 95, 142, 66, 112, 215, 225, 133, 75, 213, 69, 110, 64, 102, 31, 254, 123, 44, 98, 109, 33, 54, 172, 17, 134, 215, 180, 166, 128, 249, 184, 42, 236, 248, 69, 190, 194, 39, 248, 144, 47, 154, 208, 125, 220, 25, 83, 175, 210, 69, 154, 29, 164, 104, 204, 219, 48, 31, 124, 159, 189, 49, 196, 192, 197, 244, 23, 141, 54, 232, 142, 107, 101, 100, 249, 133 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 255, 43, 179, 236, 117, 163, 87, 155, 148, 215, 157, 109, 242, 65, 141, 203, 126, 167, 133, 42, 11, 140, 46, 97, 226, 138, 238, 131, 24, 235, 83, 73, 210, 117, 166, 20, 181, 173, 80, 161, 37, 102, 232, 253, 192, 11, 108, 114, 249, 108, 139, 125, 196, 115, 238, 138, 85, 68, 77, 30, 70, 71, 132, 216 }, new byte[] { 112, 229, 69, 84, 183, 19, 173, 183, 32, 86, 115, 208, 115, 247, 245, 151, 221, 5, 246, 20, 239, 147, 72, 231, 232, 120, 70, 140, 64, 251, 177, 170, 226, 27, 138, 252, 30, 225, 196, 135, 224, 40, 83, 217, 34, 162, 31, 101, 247, 201, 125, 177, 173, 241, 194, 12, 70, 249, 197, 86, 68, 37, 194, 17, 127, 79, 194, 22, 44, 156, 242, 165, 75, 236, 91, 240, 30, 176, 187, 147, 199, 88, 77, 47, 64, 120, 109, 58, 55, 70, 251, 187, 229, 20, 32, 85, 24, 175, 105, 157, 212, 85, 248, 135, 37, 34, 255, 206, 240, 100, 216, 14, 186, 49, 16, 133, 168, 74, 168, 121, 51, 232, 116, 74, 180, 253, 97, 92 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 92, 167, 236, 57, 12, 5, 39, 4, 47, 155, 242, 69, 196, 189, 10, 146, 178, 191, 93, 18, 61, 88, 103, 97, 183, 211, 226, 145, 145, 225, 67, 96, 129, 131, 212, 214, 218, 4, 73, 254, 135, 164, 219, 126, 246, 49, 161, 253, 71, 209, 255, 250, 124, 191, 188, 185, 58, 143, 205, 194, 109, 89, 51, 190 }, new byte[] { 32, 252, 183, 165, 164, 40, 163, 202, 186, 251, 28, 245, 59, 83, 164, 193, 19, 132, 34, 47, 61, 197, 64, 211, 72, 194, 188, 174, 164, 43, 213, 41, 184, 128, 76, 100, 254, 1, 196, 104, 168, 93, 30, 61, 99, 214, 56, 144, 16, 39, 130, 225, 27, 76, 44, 111, 168, 62, 14, 60, 119, 25, 137, 91, 247, 193, 51, 198, 7, 232, 92, 61, 135, 97, 193, 112, 241, 69, 196, 96, 11, 81, 204, 68, 211, 136, 154, 106, 221, 136, 131, 234, 2, 235, 107, 253, 200, 192, 172, 147, 137, 72, 148, 64, 90, 1, 138, 173, 163, 188, 76, 240, 63, 32, 221, 132, 233, 155, 112, 104, 73, 162, 40, 68, 116, 242, 68, 120 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 72, 124, 82, 162, 17, 229, 20, 24, 52, 62, 211, 189, 171, 106, 182, 233, 248, 174, 144, 74, 47, 120, 215, 75, 5, 198, 14, 20, 193, 239, 87, 106, 177, 176, 39, 174, 95, 105, 11, 137, 217, 142, 155, 37, 204, 51, 1, 0, 60, 244, 30, 86, 109, 124, 144, 158, 61, 242, 131, 70, 75, 42, 174, 211 }, new byte[] { 3, 102, 193, 5, 172, 199, 202, 76, 47, 87, 69, 101, 98, 94, 238, 126, 185, 182, 170, 216, 17, 18, 143, 242, 50, 243, 105, 237, 253, 67, 217, 151, 220, 126, 69, 20, 28, 226, 254, 132, 2, 110, 75, 186, 38, 252, 62, 128, 36, 191, 224, 244, 179, 21, 73, 117, 42, 170, 58, 221, 149, 158, 107, 12, 217, 132, 101, 203, 177, 68, 252, 221, 30, 233, 237, 173, 141, 222, 8, 138, 211, 37, 145, 128, 183, 240, 148, 217, 2, 247, 85, 41, 68, 6, 13, 244, 124, 215, 85, 80, 8, 83, 215, 53, 244, 28, 163, 169, 25, 228, 172, 222, 248, 151, 8, 105, 1, 15, 102, 137, 133, 219, 253, 197, 221, 208, 93, 93 } });
        }
    }
}
