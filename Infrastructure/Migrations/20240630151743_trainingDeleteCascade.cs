using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Infrastructure.Migrations
{
    /// <inheritdoc />
    public partial class trainingDeleteCascade : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_JobTrainingPrograms_TrainingPrograms_TrainingProgramId",
                table: "JobTrainingPrograms");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 51, 197, 5, 99, 15, 132, 156, 151, 38, 46, 115, 37, 113, 51, 123, 219, 43, 75, 73, 247, 195, 176, 204, 153, 152, 193, 58, 17, 103, 36, 153, 188, 84, 140, 117, 158, 168, 190, 136, 26, 230, 159, 227, 47, 250, 148, 242, 231, 98, 119, 156, 117, 175, 173, 55, 144, 131, 91, 160, 62, 154, 149, 173, 191 }, new byte[] { 197, 62, 61, 74, 135, 11, 201, 21, 139, 243, 180, 50, 2, 52, 0, 103, 237, 26, 182, 52, 89, 25, 204, 201, 214, 44, 11, 124, 56, 120, 133, 202, 65, 180, 187, 155, 149, 197, 41, 211, 150, 98, 146, 129, 140, 33, 101, 185, 138, 184, 111, 185, 39, 227, 187, 76, 231, 54, 89, 110, 192, 63, 99, 129, 156, 77, 10, 126, 78, 124, 77, 4, 210, 30, 154, 246, 190, 109, 69, 227, 101, 45, 104, 14, 53, 44, 95, 79, 34, 228, 108, 85, 23, 16, 63, 182, 163, 107, 58, 81, 40, 106, 199, 150, 26, 213, 154, 228, 2, 65, 25, 246, 24, 151, 177, 51, 147, 195, 84, 54, 111, 117, 136, 185, 236, 127, 119, 190 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 0, 120, 230, 194, 251, 50, 193, 150, 239, 181, 64, 203, 188, 151, 5, 26, 227, 197, 236, 130, 205, 186, 233, 136, 243, 236, 166, 94, 134, 86, 20, 117, 186, 210, 42, 243, 53, 178, 208, 35, 11, 46, 65, 253, 15, 133, 75, 13, 108, 196, 86, 185, 137, 94, 86, 200, 150, 54, 206, 208, 17, 79, 92, 163 }, new byte[] { 161, 181, 97, 122, 42, 181, 216, 39, 170, 154, 131, 211, 109, 115, 98, 116, 228, 84, 85, 255, 198, 6, 127, 228, 182, 138, 152, 1, 235, 216, 55, 3, 188, 168, 157, 61, 247, 152, 158, 79, 202, 85, 31, 62, 18, 159, 153, 112, 33, 70, 248, 216, 200, 171, 212, 72, 11, 159, 94, 166, 49, 18, 12, 86, 28, 129, 21, 106, 73, 195, 192, 3, 41, 120, 146, 15, 253, 141, 211, 36, 138, 88, 242, 24, 7, 8, 103, 202, 210, 186, 19, 34, 10, 250, 181, 57, 93, 222, 8, 121, 163, 197, 39, 212, 34, 111, 0, 220, 24, 173, 71, 54, 217, 46, 129, 5, 126, 250, 232, 208, 246, 189, 51, 18, 251, 125, 40, 204 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 233, 129, 251, 59, 222, 60, 112, 100, 21, 68, 248, 183, 249, 5, 228, 104, 230, 141, 179, 49, 33, 40, 100, 48, 140, 222, 66, 89, 101, 71, 90, 1, 139, 75, 27, 70, 69, 129, 114, 112, 222, 107, 197, 65, 202, 150, 101, 202, 132, 146, 202, 200, 27, 232, 198, 8, 28, 103, 218, 194, 247, 83, 209, 77 }, new byte[] { 240, 179, 125, 42, 113, 113, 93, 233, 221, 238, 148, 14, 64, 127, 208, 234, 64, 40, 130, 73, 107, 119, 109, 251, 139, 117, 235, 223, 185, 10, 88, 153, 179, 28, 38, 209, 15, 180, 2, 123, 71, 140, 227, 130, 102, 191, 46, 251, 24, 46, 254, 93, 217, 190, 107, 113, 53, 155, 253, 71, 2, 183, 218, 77, 249, 151, 249, 184, 156, 130, 129, 184, 65, 23, 72, 8, 173, 111, 7, 5, 1, 188, 159, 91, 151, 46, 56, 214, 8, 162, 206, 212, 122, 211, 255, 139, 235, 93, 62, 229, 146, 23, 254, 183, 250, 166, 200, 74, 95, 168, 141, 83, 30, 252, 104, 152, 12, 179, 31, 173, 59, 135, 255, 80, 11, 138, 49, 195 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 214, 56, 131, 253, 233, 54, 83, 243, 131, 246, 209, 226, 71, 103, 237, 209, 22, 212, 217, 244, 3, 174, 29, 59, 41, 124, 57, 49, 85, 145, 251, 109, 165, 143, 225, 37, 55, 75, 52, 175, 159, 5, 241, 50, 72, 189, 100, 202, 152, 211, 222, 114, 244, 127, 123, 9, 84, 93, 43, 66, 98, 78, 196, 55 }, new byte[] { 95, 113, 26, 52, 125, 201, 120, 32, 27, 91, 186, 215, 117, 235, 95, 165, 5, 99, 77, 147, 225, 168, 123, 77, 138, 185, 51, 165, 255, 8, 47, 111, 98, 247, 19, 178, 225, 216, 176, 214, 6, 125, 97, 125, 188, 95, 248, 42, 46, 213, 174, 72, 94, 7, 116, 209, 242, 37, 62, 87, 13, 127, 149, 144, 136, 249, 122, 178, 205, 55, 44, 179, 218, 179, 57, 66, 76, 161, 24, 232, 65, 49, 50, 140, 198, 3, 77, 88, 92, 170, 153, 73, 222, 52, 65, 114, 253, 127, 44, 8, 97, 81, 56, 150, 105, 187, 241, 96, 59, 193, 99, 95, 170, 78, 13, 84, 204, 175, 8, 199, 40, 156, 8, 124, 10, 14, 112, 188 } });

            migrationBuilder.AddForeignKey(
                name: "FK_JobTrainingPrograms_TrainingPrograms_TrainingProgramId",
                table: "JobTrainingPrograms",
                column: "TrainingProgramId",
                principalTable: "TrainingPrograms",
                principalColumn: "Id",
                onDelete: ReferentialAction.Cascade);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_JobTrainingPrograms_TrainingPrograms_TrainingProgramId",
                table: "JobTrainingPrograms");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 40, 206, 245, 185, 99, 239, 104, 240, 37, 210, 59, 3, 151, 34, 155, 229, 212, 207, 185, 41, 179, 138, 232, 100, 159, 180, 125, 61, 113, 77, 31, 8, 10, 107, 16, 164, 233, 58, 82, 221, 103, 190, 108, 96, 218, 186, 237, 248, 106, 60, 61, 85, 176, 76, 226, 42, 78, 255, 175, 184, 227, 156, 147, 139 }, new byte[] { 100, 234, 129, 192, 209, 65, 184, 105, 212, 210, 112, 54, 61, 102, 113, 33, 34, 80, 205, 186, 195, 190, 214, 234, 154, 13, 74, 211, 96, 64, 204, 178, 204, 135, 73, 192, 181, 124, 102, 29, 44, 128, 134, 215, 224, 129, 25, 80, 202, 116, 163, 182, 214, 158, 227, 92, 174, 51, 105, 71, 233, 130, 137, 126, 73, 206, 82, 91, 135, 242, 121, 224, 135, 35, 36, 207, 141, 4, 235, 108, 108, 161, 217, 60, 151, 24, 105, 240, 108, 149, 221, 205, 229, 214, 57, 182, 228, 32, 177, 149, 202, 96, 122, 255, 134, 206, 243, 179, 253, 56, 162, 128, 55, 125, 89, 205, 23, 141, 185, 182, 118, 107, 57, 126, 141, 26, 143, 95 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 96, 125, 176, 49, 255, 151, 143, 181, 107, 94, 124, 103, 233, 25, 234, 94, 111, 228, 231, 83, 209, 116, 214, 118, 94, 187, 5, 75, 27, 75, 64, 231, 58, 156, 39, 69, 31, 126, 2, 76, 212, 181, 93, 183, 208, 251, 111, 92, 124, 141, 123, 131, 89, 213, 204, 155, 225, 244, 206, 172, 81, 115, 47, 251 }, new byte[] { 82, 204, 207, 156, 215, 254, 119, 71, 115, 109, 180, 84, 201, 71, 105, 115, 171, 190, 212, 31, 165, 157, 157, 150, 193, 247, 176, 31, 206, 219, 127, 109, 8, 118, 90, 208, 202, 87, 70, 188, 36, 204, 144, 106, 213, 96, 183, 70, 36, 235, 92, 160, 132, 176, 112, 137, 12, 126, 250, 114, 216, 35, 228, 88, 249, 15, 35, 58, 8, 182, 138, 114, 56, 50, 219, 145, 161, 83, 110, 205, 164, 193, 248, 137, 188, 179, 59, 130, 175, 189, 34, 218, 43, 226, 219, 8, 30, 154, 124, 187, 9, 210, 4, 152, 143, 220, 50, 206, 114, 45, 184, 28, 142, 176, 164, 227, 16, 147, 88, 119, 102, 155, 107, 167, 180, 7, 59, 68 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 188, 80, 102, 22, 32, 225, 73, 184, 4, 251, 251, 252, 181, 102, 170, 58, 67, 68, 179, 13, 131, 240, 123, 163, 220, 204, 72, 129, 44, 201, 230, 222, 110, 53, 81, 63, 143, 47, 176, 167, 93, 61, 13, 123, 112, 65, 113, 23, 238, 8, 151, 59, 134, 237, 206, 12, 135, 75, 78, 117, 76, 240, 32, 52 }, new byte[] { 255, 183, 20, 16, 81, 204, 20, 179, 11, 40, 169, 71, 54, 31, 92, 82, 10, 177, 131, 72, 32, 32, 7, 108, 161, 176, 225, 2, 112, 123, 220, 25, 104, 144, 13, 49, 61, 101, 10, 120, 30, 88, 200, 205, 5, 51, 27, 197, 231, 10, 225, 163, 218, 57, 18, 171, 202, 231, 11, 252, 237, 226, 238, 158, 211, 120, 71, 216, 18, 15, 146, 160, 180, 239, 166, 24, 204, 156, 28, 52, 89, 46, 20, 14, 97, 226, 184, 209, 113, 118, 89, 65, 168, 179, 176, 22, 79, 204, 166, 26, 211, 84, 17, 14, 64, 93, 42, 244, 192, 14, 114, 62, 252, 170, 93, 147, 123, 163, 210, 214, 215, 162, 117, 226, 40, 4, 241, 159 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 185, 83, 201, 149, 27, 48, 16, 48, 43, 5, 113, 172, 194, 196, 129, 27, 34, 153, 232, 204, 132, 99, 225, 203, 204, 186, 227, 242, 218, 68, 80, 63, 242, 72, 116, 17, 26, 25, 28, 216, 135, 241, 128, 103, 2, 18, 170, 210, 165, 139, 147, 248, 18, 160, 134, 151, 181, 172, 136, 40, 74, 41, 209, 240 }, new byte[] { 47, 2, 107, 152, 103, 20, 105, 170, 217, 196, 106, 70, 79, 127, 154, 94, 50, 197, 73, 131, 89, 134, 115, 88, 177, 127, 182, 40, 135, 227, 24, 0, 134, 240, 82, 39, 215, 123, 128, 78, 201, 43, 192, 253, 125, 30, 228, 81, 162, 58, 169, 166, 68, 144, 50, 3, 238, 33, 172, 74, 0, 65, 53, 74, 202, 50, 236, 121, 231, 139, 211, 201, 178, 164, 219, 201, 170, 231, 253, 27, 32, 208, 44, 126, 146, 125, 28, 163, 120, 174, 40, 15, 102, 22, 117, 241, 140, 241, 145, 181, 25, 249, 203, 25, 3, 207, 85, 214, 24, 152, 43, 133, 9, 219, 239, 61, 222, 97, 26, 2, 254, 190, 105, 216, 178, 227, 132, 149 } });

            migrationBuilder.AddForeignKey(
                name: "FK_JobTrainingPrograms_TrainingPrograms_TrainingProgramId",
                table: "JobTrainingPrograms",
                column: "TrainingProgramId",
                principalTable: "TrainingPrograms",
                principalColumn: "Id");
        }
    }
}
