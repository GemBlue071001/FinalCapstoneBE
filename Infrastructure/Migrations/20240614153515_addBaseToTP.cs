using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Infrastructure.Migrations
{
    /// <inheritdoc />
    public partial class addBaseToTP : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<Guid>(
                name: "CreatedBy",
                table: "TrainingProgram",
                type: "uuid",
                nullable: true);

            migrationBuilder.AddColumn<DateTime>(
                name: "CreatedDate",
                table: "TrainingProgram",
                type: "timestamp with time zone",
                nullable: true);

            migrationBuilder.AddColumn<bool>(
                name: "IsDeleted",
                table: "TrainingProgram",
                type: "boolean",
                nullable: false,
                defaultValue: false);

            migrationBuilder.AddColumn<Guid>(
                name: "ModifiedBy",
                table: "TrainingProgram",
                type: "uuid",
                nullable: true);

            migrationBuilder.AddColumn<DateTime>(
                name: "ModifiedDate",
                table: "TrainingProgram",
                type: "timestamp with time zone",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 18, 12, 101, 46, 94, 157, 58, 197, 17, 77, 118, 88, 171, 98, 25, 44, 181, 96, 191, 107, 237, 66, 236, 42, 213, 186, 166, 223, 2, 160, 91, 84, 122, 33, 222, 109, 155, 252, 209, 21, 143, 72, 80, 134, 227, 136, 136, 123, 131, 56, 194, 7, 242, 67, 238, 192, 105, 191, 198, 91, 149, 252, 67, 99 }, new byte[] { 129, 12, 15, 109, 252, 92, 64, 35, 221, 32, 173, 136, 122, 145, 4, 229, 218, 77, 109, 235, 24, 235, 24, 248, 13, 13, 194, 65, 14, 198, 17, 227, 211, 101, 170, 120, 213, 28, 3, 34, 249, 203, 204, 58, 227, 219, 18, 54, 63, 165, 92, 189, 222, 214, 30, 209, 13, 161, 75, 45, 25, 145, 193, 186, 226, 232, 161, 187, 107, 140, 148, 179, 198, 132, 89, 239, 34, 167, 180, 193, 243, 61, 84, 243, 185, 147, 234, 250, 32, 220, 217, 126, 219, 167, 195, 188, 14, 153, 217, 216, 178, 150, 190, 16, 236, 210, 224, 149, 248, 125, 145, 239, 157, 86, 35, 236, 186, 46, 39, 247, 92, 134, 153, 188, 253, 93, 99, 88 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 168, 42, 92, 218, 109, 44, 198, 117, 146, 232, 47, 92, 154, 98, 186, 71, 159, 75, 63, 139, 24, 158, 32, 9, 185, 95, 104, 120, 140, 107, 60, 252, 106, 253, 164, 109, 159, 168, 82, 24, 91, 98, 116, 34, 242, 31, 231, 65, 160, 106, 46, 146, 58, 19, 127, 185, 23, 237, 117, 195, 160, 124, 74, 74 }, new byte[] { 81, 136, 155, 216, 198, 241, 225, 34, 25, 110, 220, 220, 243, 204, 94, 89, 206, 235, 92, 198, 188, 205, 198, 143, 155, 127, 194, 25, 83, 147, 42, 62, 35, 184, 227, 193, 205, 138, 64, 249, 8, 67, 57, 25, 176, 31, 141, 136, 76, 165, 241, 175, 93, 237, 118, 144, 218, 145, 3, 160, 88, 205, 88, 157, 131, 115, 92, 115, 114, 183, 63, 39, 174, 35, 107, 12, 243, 138, 141, 57, 82, 146, 15, 47, 165, 80, 32, 185, 106, 200, 106, 206, 216, 11, 150, 67, 247, 195, 65, 120, 243, 238, 1, 92, 63, 207, 163, 65, 160, 109, 55, 176, 104, 121, 132, 202, 201, 59, 76, 212, 16, 98, 128, 117, 22, 238, 121, 40 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 16, 179, 22, 188, 208, 86, 112, 166, 182, 112, 42, 202, 0, 141, 46, 18, 251, 116, 53, 88, 2, 233, 185, 123, 141, 118, 175, 154, 1, 21, 203, 163, 14, 232, 121, 175, 7, 173, 0, 123, 248, 136, 252, 18, 52, 50, 186, 53, 177, 89, 253, 161, 112, 190, 113, 142, 63, 63, 214, 120, 172, 22, 161, 105 }, new byte[] { 33, 76, 79, 27, 30, 86, 127, 67, 71, 165, 162, 48, 159, 146, 38, 52, 58, 100, 60, 225, 222, 78, 149, 11, 107, 211, 55, 175, 208, 58, 193, 48, 106, 148, 245, 164, 179, 127, 239, 44, 198, 147, 217, 49, 208, 123, 30, 160, 205, 103, 224, 195, 157, 107, 2, 178, 250, 125, 248, 17, 204, 138, 251, 9, 199, 32, 111, 196, 133, 208, 71, 111, 203, 65, 125, 178, 125, 239, 179, 13, 170, 180, 15, 239, 31, 42, 34, 129, 209, 151, 144, 65, 31, 30, 89, 108, 7, 53, 249, 170, 114, 151, 175, 213, 234, 0, 171, 31, 191, 133, 45, 115, 127, 144, 92, 87, 211, 67, 32, 46, 134, 90, 198, 19, 43, 215, 93, 70 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 153, 50, 37, 200, 40, 169, 240, 25, 223, 140, 55, 142, 197, 37, 46, 64, 180, 33, 205, 30, 187, 40, 5, 231, 48, 85, 119, 49, 232, 52, 34, 233, 133, 84, 230, 78, 46, 123, 234, 184, 24, 121, 82, 59, 242, 103, 188, 241, 124, 57, 152, 77, 78, 113, 73, 147, 216, 164, 53, 165, 163, 176, 249, 182 }, new byte[] { 191, 97, 85, 190, 96, 26, 86, 31, 17, 191, 100, 18, 39, 30, 192, 213, 148, 102, 9, 195, 214, 255, 250, 249, 213, 71, 108, 65, 61, 198, 151, 33, 41, 87, 229, 11, 49, 233, 36, 254, 31, 225, 12, 201, 126, 49, 162, 17, 129, 172, 122, 72, 230, 203, 135, 218, 220, 16, 241, 14, 144, 88, 75, 50, 79, 225, 170, 107, 193, 50, 105, 123, 233, 22, 47, 150, 35, 253, 7, 108, 18, 197, 138, 223, 28, 250, 217, 197, 114, 214, 221, 158, 119, 169, 85, 34, 152, 86, 39, 10, 224, 234, 197, 14, 61, 125, 90, 103, 199, 130, 122, 5, 8, 207, 99, 103, 15, 100, 84, 51, 164, 45, 236, 56, 131, 90, 47, 154 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropColumn(
                name: "CreatedBy",
                table: "TrainingProgram");

            migrationBuilder.DropColumn(
                name: "CreatedDate",
                table: "TrainingProgram");

            migrationBuilder.DropColumn(
                name: "IsDeleted",
                table: "TrainingProgram");

            migrationBuilder.DropColumn(
                name: "ModifiedBy",
                table: "TrainingProgram");

            migrationBuilder.DropColumn(
                name: "ModifiedDate",
                table: "TrainingProgram");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 187, 150, 127, 112, 67, 84, 113, 65, 139, 54, 5, 137, 56, 163, 112, 57, 157, 17, 22, 123, 55, 128, 18, 66, 241, 52, 97, 111, 111, 166, 67, 193, 208, 135, 64, 77, 217, 90, 238, 247, 58, 188, 225, 23, 204, 172, 123, 5, 68, 208, 255, 51, 238, 147, 84, 177, 139, 241, 118, 89, 55, 13, 9, 83 }, new byte[] { 71, 228, 63, 100, 225, 156, 108, 96, 61, 230, 160, 62, 214, 184, 94, 58, 242, 9, 82, 69, 223, 215, 101, 38, 43, 113, 244, 96, 77, 43, 141, 4, 225, 143, 201, 170, 148, 198, 111, 162, 54, 13, 82, 56, 118, 39, 116, 190, 201, 33, 26, 217, 138, 26, 133, 153, 249, 208, 177, 215, 184, 81, 99, 16, 175, 193, 38, 144, 107, 34, 154, 33, 43, 7, 57, 58, 200, 238, 43, 151, 99, 226, 208, 49, 70, 39, 196, 78, 154, 89, 110, 87, 20, 252, 52, 149, 31, 189, 36, 223, 26, 54, 161, 33, 239, 54, 254, 217, 10, 25, 84, 161, 28, 59, 58, 186, 149, 213, 184, 237, 154, 205, 177, 223, 207, 167, 86, 100 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 251, 12, 80, 254, 8, 118, 188, 120, 254, 210, 196, 9, 36, 68, 249, 155, 236, 219, 221, 51, 81, 28, 58, 97, 169, 30, 65, 77, 250, 159, 94, 160, 133, 187, 217, 102, 45, 22, 93, 46, 115, 59, 196, 236, 95, 104, 163, 85, 210, 243, 131, 31, 206, 129, 250, 137, 15, 86, 216, 33, 54, 62, 123, 202 }, new byte[] { 216, 108, 73, 175, 62, 70, 178, 245, 121, 62, 12, 246, 60, 15, 183, 223, 67, 4, 102, 81, 131, 37, 98, 7, 62, 51, 5, 40, 91, 211, 242, 27, 250, 211, 114, 12, 31, 105, 5, 226, 79, 95, 90, 52, 154, 45, 221, 108, 204, 79, 168, 88, 151, 68, 0, 35, 19, 184, 169, 155, 42, 62, 136, 123, 189, 4, 197, 93, 252, 175, 13, 183, 82, 31, 87, 204, 134, 213, 167, 86, 213, 187, 33, 68, 32, 50, 203, 90, 194, 58, 192, 232, 48, 89, 22, 235, 38, 77, 19, 159, 250, 76, 57, 49, 156, 84, 169, 213, 119, 157, 38, 252, 228, 93, 67, 75, 36, 9, 224, 231, 215, 34, 7, 135, 55, 230, 2, 175 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 248, 125, 89, 181, 144, 17, 228, 10, 253, 45, 38, 161, 145, 247, 246, 98, 201, 99, 209, 157, 128, 39, 25, 161, 7, 101, 226, 44, 108, 178, 175, 242, 194, 28, 55, 166, 45, 23, 147, 147, 4, 208, 246, 75, 162, 118, 152, 170, 70, 154, 47, 130, 45, 13, 110, 24, 134, 137, 18, 61, 15, 129, 145, 28 }, new byte[] { 166, 247, 162, 49, 144, 218, 202, 12, 242, 202, 159, 15, 237, 251, 202, 133, 181, 79, 34, 103, 240, 23, 85, 134, 16, 162, 222, 188, 219, 94, 254, 15, 22, 193, 77, 15, 141, 52, 87, 61, 78, 84, 136, 253, 47, 172, 160, 173, 130, 224, 231, 102, 32, 139, 195, 203, 3, 58, 80, 102, 15, 94, 253, 209, 13, 177, 168, 213, 5, 56, 112, 105, 122, 119, 186, 140, 65, 75, 70, 208, 169, 37, 160, 72, 72, 200, 124, 246, 183, 122, 241, 9, 181, 14, 146, 76, 81, 213, 120, 49, 48, 213, 220, 251, 147, 228, 88, 164, 202, 155, 183, 220, 172, 107, 0, 237, 35, 105, 224, 200, 94, 153, 211, 213, 180, 238, 29, 137 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 88, 214, 3, 64, 230, 220, 253, 50, 60, 42, 30, 116, 1, 98, 132, 132, 148, 109, 0, 86, 222, 42, 188, 40, 139, 128, 10, 241, 243, 134, 201, 85, 184, 46, 140, 100, 17, 188, 223, 129, 226, 222, 178, 210, 207, 24, 249, 120, 123, 39, 112, 128, 244, 79, 7, 45, 198, 187, 129, 144, 164, 206, 71, 7 }, new byte[] { 175, 91, 247, 61, 224, 148, 49, 54, 188, 210, 36, 233, 207, 138, 88, 206, 121, 191, 84, 165, 255, 67, 245, 91, 132, 189, 98, 161, 18, 111, 232, 54, 174, 125, 122, 127, 10, 108, 233, 19, 138, 18, 240, 113, 156, 222, 112, 244, 43, 152, 128, 89, 242, 243, 94, 198, 158, 238, 28, 87, 28, 65, 177, 179, 154, 236, 123, 121, 159, 74, 236, 239, 250, 114, 40, 211, 75, 166, 199, 10, 14, 153, 214, 97, 169, 95, 14, 185, 234, 76, 37, 114, 66, 198, 175, 80, 126, 193, 165, 244, 86, 254, 180, 89, 133, 144, 198, 212, 83, 19, 165, 74, 36, 89, 131, 253, 19, 6, 12, 18, 237, 115, 243, 73, 237, 188, 41, 41 } });
        }
    }
}
