using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Infrastructure.Migrations
{
    /// <inheritdoc />
    public partial class modifyAssessment : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<int>(
                name: "TrainingProgramId",
                table: "Assessments",
                type: "integer",
                nullable: true);

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 219, 154, 199, 161, 88, 50, 80, 67, 65, 32, 20, 200, 244, 165, 93, 99, 27, 198, 71, 18, 25, 254, 94, 94, 133, 101, 147, 108, 24, 255, 57, 114, 15, 55, 107, 129, 189, 113, 250, 139, 168, 132, 150, 138, 42, 93, 186, 17, 45, 176, 3, 23, 107, 214, 80, 175, 190, 135, 162, 81, 153, 128, 200, 215 }, new byte[] { 225, 68, 208, 235, 40, 104, 151, 193, 70, 101, 44, 66, 182, 157, 142, 118, 9, 58, 92, 169, 209, 142, 239, 199, 239, 154, 95, 168, 19, 99, 27, 11, 46, 142, 173, 153, 33, 240, 33, 156, 26, 31, 79, 88, 19, 191, 24, 91, 38, 86, 153, 3, 38, 95, 142, 66, 112, 215, 225, 133, 75, 213, 69, 110, 64, 102, 31, 254, 123, 44, 98, 109, 33, 54, 172, 17, 134, 215, 180, 166, 128, 249, 184, 42, 236, 248, 69, 190, 194, 39, 248, 144, 47, 154, 208, 125, 220, 25, 83, 175, 210, 69, 154, 29, 164, 104, 204, 219, 48, 31, 124, 159, 189, 49, 196, 192, 197, 244, 23, 141, 54, 232, 142, 107, 101, 100, 249, 133 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 255, 43, 179, 236, 117, 163, 87, 155, 148, 215, 157, 109, 242, 65, 141, 203, 126, 167, 133, 42, 11, 140, 46, 97, 226, 138, 238, 131, 24, 235, 83, 73, 210, 117, 166, 20, 181, 173, 80, 161, 37, 102, 232, 253, 192, 11, 108, 114, 249, 108, 139, 125, 196, 115, 238, 138, 85, 68, 77, 30, 70, 71, 132, 216 }, new byte[] { 112, 229, 69, 84, 183, 19, 173, 183, 32, 86, 115, 208, 115, 247, 245, 151, 221, 5, 246, 20, 239, 147, 72, 231, 232, 120, 70, 140, 64, 251, 177, 170, 226, 27, 138, 252, 30, 225, 196, 135, 224, 40, 83, 217, 34, 162, 31, 101, 247, 201, 125, 177, 173, 241, 194, 12, 70, 249, 197, 86, 68, 37, 194, 17, 127, 79, 194, 22, 44, 156, 242, 165, 75, 236, 91, 240, 30, 176, 187, 147, 199, 88, 77, 47, 64, 120, 109, 58, 55, 70, 251, 187, 229, 20, 32, 85, 24, 175, 105, 157, 212, 85, 248, 135, 37, 34, 255, 206, 240, 100, 216, 14, 186, 49, 16, 133, 168, 74, 168, 121, 51, 232, 116, 74, 180, 253, 97, 92 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 92, 167, 236, 57, 12, 5, 39, 4, 47, 155, 242, 69, 196, 189, 10, 146, 178, 191, 93, 18, 61, 88, 103, 97, 183, 211, 226, 145, 145, 225, 67, 96, 129, 131, 212, 214, 218, 4, 73, 254, 135, 164, 219, 126, 246, 49, 161, 253, 71, 209, 255, 250, 124, 191, 188, 185, 58, 143, 205, 194, 109, 89, 51, 190 }, new byte[] { 32, 252, 183, 165, 164, 40, 163, 202, 186, 251, 28, 245, 59, 83, 164, 193, 19, 132, 34, 47, 61, 197, 64, 211, 72, 194, 188, 174, 164, 43, 213, 41, 184, 128, 76, 100, 254, 1, 196, 104, 168, 93, 30, 61, 99, 214, 56, 144, 16, 39, 130, 225, 27, 76, 44, 111, 168, 62, 14, 60, 119, 25, 137, 91, 247, 193, 51, 198, 7, 232, 92, 61, 135, 97, 193, 112, 241, 69, 196, 96, 11, 81, 204, 68, 211, 136, 154, 106, 221, 136, 131, 234, 2, 235, 107, 253, 200, 192, 172, 147, 137, 72, 148, 64, 90, 1, 138, 173, 163, 188, 76, 240, 63, 32, 221, 132, 233, 155, 112, 104, 73, 162, 40, 68, 116, 242, 68, 120 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 72, 124, 82, 162, 17, 229, 20, 24, 52, 62, 211, 189, 171, 106, 182, 233, 248, 174, 144, 74, 47, 120, 215, 75, 5, 198, 14, 20, 193, 239, 87, 106, 177, 176, 39, 174, 95, 105, 11, 137, 217, 142, 155, 37, 204, 51, 1, 0, 60, 244, 30, 86, 109, 124, 144, 158, 61, 242, 131, 70, 75, 42, 174, 211 }, new byte[] { 3, 102, 193, 5, 172, 199, 202, 76, 47, 87, 69, 101, 98, 94, 238, 126, 185, 182, 170, 216, 17, 18, 143, 242, 50, 243, 105, 237, 253, 67, 217, 151, 220, 126, 69, 20, 28, 226, 254, 132, 2, 110, 75, 186, 38, 252, 62, 128, 36, 191, 224, 244, 179, 21, 73, 117, 42, 170, 58, 221, 149, 158, 107, 12, 217, 132, 101, 203, 177, 68, 252, 221, 30, 233, 237, 173, 141, 222, 8, 138, 211, 37, 145, 128, 183, 240, 148, 217, 2, 247, 85, 41, 68, 6, 13, 244, 124, 215, 85, 80, 8, 83, 215, 53, 244, 28, 163, 169, 25, 228, 172, 222, 248, 151, 8, 105, 1, 15, 102, 137, 133, 219, 253, 197, 221, 208, 93, 93 } });

            migrationBuilder.CreateIndex(
                name: "IX_Assessments_TrainingProgramId",
                table: "Assessments",
                column: "TrainingProgramId");

            migrationBuilder.AddForeignKey(
                name: "FK_Assessments_TrainingPrograms_TrainingProgramId",
                table: "Assessments",
                column: "TrainingProgramId",
                principalTable: "TrainingPrograms",
                principalColumn: "Id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Assessments_TrainingPrograms_TrainingProgramId",
                table: "Assessments");

            migrationBuilder.DropIndex(
                name: "IX_Assessments_TrainingProgramId",
                table: "Assessments");

            migrationBuilder.DropColumn(
                name: "TrainingProgramId",
                table: "Assessments");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 43, 54, 92, 22, 127, 42, 92, 227, 107, 119, 84, 229, 221, 51, 117, 112, 47, 171, 127, 12, 246, 54, 213, 212, 121, 96, 137, 126, 198, 47, 103, 179, 179, 198, 203, 34, 79, 103, 80, 166, 49, 247, 196, 126, 127, 238, 153, 67, 180, 44, 62, 79, 243, 175, 126, 23, 148, 233, 141, 11, 166, 208, 157, 236 }, new byte[] { 139, 184, 209, 32, 14, 1, 53, 43, 31, 205, 50, 242, 124, 248, 73, 51, 218, 31, 151, 248, 169, 99, 53, 229, 18, 111, 89, 14, 178, 226, 137, 210, 174, 61, 139, 230, 243, 3, 139, 194, 51, 78, 244, 180, 223, 192, 139, 177, 16, 213, 84, 122, 51, 173, 152, 104, 95, 191, 27, 152, 221, 35, 233, 68, 24, 251, 18, 228, 172, 196, 6, 30, 113, 160, 157, 118, 58, 35, 206, 212, 60, 221, 226, 102, 116, 126, 162, 45, 17, 208, 82, 149, 35, 80, 14, 7, 147, 252, 126, 90, 100, 199, 62, 60, 171, 212, 215, 250, 204, 218, 138, 105, 190, 134, 14, 239, 126, 231, 236, 169, 196, 210, 220, 15, 201, 62, 4, 3 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 193, 67, 161, 130, 201, 232, 95, 111, 192, 114, 84, 85, 73, 3, 23, 136, 210, 212, 52, 16, 112, 24, 210, 40, 240, 176, 80, 124, 241, 145, 252, 44, 153, 229, 135, 137, 157, 77, 237, 14, 164, 109, 160, 41, 183, 132, 21, 0, 92, 181, 74, 215, 124, 10, 136, 58, 62, 8, 141, 168, 230, 225, 227, 75 }, new byte[] { 141, 86, 190, 15, 177, 91, 26, 161, 184, 169, 29, 180, 73, 3, 7, 116, 55, 156, 177, 35, 208, 73, 205, 182, 142, 44, 137, 137, 185, 164, 84, 95, 23, 150, 66, 113, 133, 170, 94, 197, 16, 176, 158, 124, 211, 1, 130, 205, 189, 26, 15, 167, 163, 234, 160, 23, 102, 37, 229, 237, 76, 35, 62, 129, 29, 122, 40, 205, 198, 19, 89, 52, 248, 236, 245, 242, 6, 182, 17, 241, 153, 232, 11, 210, 17, 18, 51, 6, 22, 142, 155, 56, 103, 211, 2, 214, 169, 166, 252, 115, 250, 135, 165, 207, 225, 98, 139, 187, 95, 185, 18, 119, 65, 198, 97, 215, 79, 31, 230, 10, 143, 61, 74, 44, 233, 63, 189, 35 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 227, 208, 185, 154, 132, 211, 110, 241, 148, 216, 204, 254, 104, 116, 161, 233, 49, 214, 223, 19, 170, 213, 113, 163, 111, 240, 161, 59, 53, 189, 215, 101, 100, 230, 132, 247, 210, 188, 48, 155, 123, 32, 20, 64, 213, 176, 197, 40, 96, 52, 140, 208, 167, 105, 16, 108, 126, 26, 87, 47, 147, 54, 133, 163 }, new byte[] { 67, 156, 254, 142, 103, 41, 202, 182, 97, 218, 201, 231, 55, 147, 3, 155, 18, 122, 193, 15, 126, 106, 216, 15, 121, 222, 176, 181, 234, 95, 223, 163, 160, 241, 75, 231, 140, 135, 128, 196, 86, 85, 102, 194, 43, 83, 38, 232, 55, 185, 138, 242, 205, 86, 86, 66, 54, 65, 184, 31, 221, 13, 221, 251, 114, 186, 1, 230, 204, 7, 53, 215, 94, 240, 193, 62, 140, 88, 51, 136, 169, 242, 105, 241, 77, 63, 250, 252, 161, 17, 29, 123, 77, 206, 201, 183, 218, 110, 17, 30, 171, 186, 165, 207, 39, 222, 229, 89, 145, 84, 87, 244, 10, 33, 37, 198, 84, 50, 70, 165, 198, 78, 29, 119, 176, 91, 64, 224 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 7, 158, 94, 251, 192, 30, 224, 237, 142, 27, 95, 59, 17, 192, 209, 212, 31, 115, 103, 82, 181, 106, 159, 214, 152, 121, 131, 82, 82, 26, 120, 82, 104, 148, 115, 111, 69, 19, 131, 186, 255, 138, 182, 32, 121, 131, 161, 52, 172, 213, 1, 132, 132, 191, 152, 16, 107, 105, 212, 16, 220, 17, 20, 227 }, new byte[] { 91, 239, 69, 250, 98, 218, 56, 164, 130, 154, 107, 126, 197, 47, 58, 247, 129, 149, 6, 139, 249, 101, 162, 189, 154, 248, 16, 44, 4, 37, 169, 227, 162, 20, 208, 44, 86, 218, 205, 63, 74, 171, 237, 142, 181, 90, 234, 161, 150, 2, 131, 213, 88, 215, 196, 121, 91, 130, 142, 223, 146, 112, 130, 114, 157, 32, 136, 168, 123, 16, 139, 128, 72, 176, 134, 218, 35, 187, 251, 80, 190, 115, 115, 175, 123, 7, 71, 61, 196, 234, 236, 149, 38, 95, 19, 40, 254, 13, 58, 44, 147, 75, 43, 240, 8, 19, 186, 10, 180, 33, 149, 253, 53, 167, 63, 149, 13, 43, 18, 178, 94, 93, 28, 193, 87, 25, 182, 237 } });
        }
    }
}
